<?php

use \Drupal\Core\Render\Markup;

/**
 * Implements hook_rest_resource_alter().
 */
function pro_core_rest_resource_alter(&$definitions) {
  if (isset($definitions['entity:user'])) {
    $definitions['entity:user']['class'] = 'Drupal\pro_core\Plugin\rest\resource\UserEntityAlterResource';
  }
}

/**
 * Implements hook_mail_alter().
 *
 * Sets the default "from" address to the current store email.
 */
function pro_core_mail_alter(&$message) {
  $to = $message['to'];
  $language =  \Drupal::languageManager()->getCurrentLanguage()->getId();

  if (substr($message['id'], 0, 9) == 'commerce_') {
    if (strpos($to, '@basf.com') === false) {
      $config = \Drupal::config('system.site');
      $site_mail = $config->get('mail');
      $message['from'] = $site_mail;
    }
  } else {
    // 使用管理员的邮箱作为代发标识
    $account = \Drupal\user\Entity\User::load(1);

    if (strpos($to, '@basf.com') !== false) {
      $message['from'] = $account->getEmail();
    }
  }

  switch ($message['id']) {
    case 'rest_password_password_reset_rest':
      if ($language === 'en') {
        $user = user_load_by_mail($message['to']);
        $service = \Drupal::service('tempstore.shared');
        $collection = 'rest_password';
        $tempstore = $service->get($collection, $user->id());
        $displayName = $user->getDisplayName();
        $tempPass = $tempstore->get('temp_pass');

        $message['subject'] = "Account $displayName at BASF Product Center (Changing Password)";
        $message['body'] = [
          "Dear user,
To reset the password of BASF Product Center, please you can copy the
following temporary link to the browser to open it.

https://www.basf-product.com/reset-pass/{$tempPass},

This temporary password change link will expire after 24 hours, please do not forward it.

Warm reminder: After the password is reset, please log in through the registered email and
password.

-BASF Product Center Team

#This email is an automatic email, please do not reply directly#"
        ];
      }

      break;

    case 'commerce_order_receipt':
      $builder = \Drupal::entityTypeManager()->getViewBuilder('profile');
      $order = $message['params']['order'];
      $customerId = $order->getCustomerId();
      $list = \Drupal::entityTypeManager()
        ->getStorage('profile')
        ->loadByProperties([
          'uid' => $customerId,
          'type' => 'customer',
          'is_default' => 1,
        ]);

      $profile = reset($list);
      if ($profile) {
        $message['params']['body']['#billing_information'] = $builder->view($profile);
      }

      $message['body'][0] = \Drupal::service('renderer')->renderPlain($message['params']['body']);
      break;

    default;
  }
}

/**
 * Implements hook_theme_registry_alter().
 */
function pro_core_theme_registry_alter(&$theme_registry) {
  $language =  \Drupal::languageManager()->getCurrentLanguage()->getId();
  $theme_registry['commerce_order_receipt']['path'] = 'modules/custom/pro_core/templates';
  if ($language === 'en') {
    $theme_registry['commerce_order_receipt']['template'] = 'commerce-order-receipt-en';
  } else {
    $theme_registry['commerce_order_receipt']['template'] = 'commerce-order-receipt-zh';
  }
}
